#!/bin/bash
#
# napoleon - an IRC bot written in Bash 4
# depends on: xargs

shopt -s lastpipe

raw() {
    local args=("$@")
    args[0]=${args[0]^^}
    (( ${#args[@]} > 1 )) && args[${#args[@]}-1]=:${args[${#args[@]}-1]}
    printf '%s\r\n' "${args[*]}" >&"$irc_fd"
    (( verbose >= 2 )) && printf '%s==>%s %s\n' "$(tput setaf 1)" "$(tput sgr0)" "${args[*]}" >&2
}

say() {
    raw privmsg "$target" "$*"
}

reply() {
    if (( private )); then
        say "$*"
    else
        say "$sender_nick: $*"
    fi
}

ctcp() {
    local args=("$@")
    args[0]=${args[0]^^}
    raw notice "$target" $'\1'"${args[*]}"$'\1'
}

on_exit() {
    raw quit "${quotes[RANDOM%${#quotes[@]}]}"
}

nick=napoleon
user=$nick
realname="NapolÃ©on Bonaparte"

. ./config.sh || exit 1
: "${server:?}" "${prefix:?}" "${port:=6667}"

quotes=(
    "Never interrupt your enemy when he is making a mistake."
    "Courage isn't having the strength to go on - it is going on when you don't have strength."
    "In politics, stupidity is not a handicap."
    "Show me a family of readers, and I will show you the people who move the world."
    "Religion is excellent stuff for keeping common people quiet. Religion is what keeps the poor from murdering the rich."
    "History is a set of lies agreed upon."
    "Imagination governs the world."
    "Nothing is more difficult, and therefore more precious, than to be able to decide."
    "If you want a thing done well, do it yourself."
    "History is written by the winners."
    "Impossible is a word to be found only in the dictionary of fools."
    "Conquests will come and go but Delambre's work will endure."
    "You don't reason with intellectuals. You shoot them."
    "A woman laughing is a woman conquered."
    "The world suffers a lot. Not because the violence of bad people. But because of the silence of the good people."
)

IFS=$' \t\n'
verbose=0

while getopts :v o; do
    case $o in
        v) (( verbose++ ));;
        *) printf 'usage: %s [-v]...\n' "$0"; exit 1;;
    esac
done
shift "$(( OPTIND - 1 ))"

for dependency in xargs; do
    if ! command -v "$dependency" > /dev/null; then
        printf 'Dependency %s not found\n' "$dependency" >&2
        exit 1
    fi
done

exec {irc_fd}<> /dev/tcp/"$server"/"$port" || exit 1

trap on_exit exit

raw nick "$nick"
raw user "$user" 0 '*' "$realname"

while read -ru "$irc_fd" line; do
    line=${line%$'\r'}
    (( verbose >= 2 )) && printf '%s<==%s %s\n' "$(tput setaf 2)" "$(tput sgr0)" "$line" >&2
    sender= sender_nick=
    args=()
    if [[ $line == :* ]]; then
        sender=${line%% *}
        sender=${sender#:}
        sender_nick=${sender%%!*}
        line=${line#* }
    fi
    while [[ $line == *' '* && $line != :* ]]; do
        args+=("${line%% *}")
        line=${line#* }
    done
    args+=("${line#:}")
    set -- "${args[@]}"
    cmd=$1
    shift
    case ${cmd,,} in
        001)
            [[ $password ]] && raw privmsg NickServ "identify $password"
            for channel in "${channels[@]}"; do
                raw join "$channel"
            done
            ;;
        ping)
            raw pong "$1"
            ;;
        privmsg)
            target=$1
            message=$2
            private=
            (( verbose >= 1 )) && printf '%sPRIVMSG%s %s <%s> %s\n' "$(tput setaf 2)" "$(tput sgr0)" "$target" "$sender_nick" "$message" >&2
            if [[ $target == $nick ]]; then
                target=$sender_nick
                private=1
            fi
            if (( private )) && [[ $message == $'\1'*$'\1' ]]; then
                message=${message#$'\1'} message=${message%$'\1'}
                read -ra ctcp_args <<< "$message"
                set -- "${ctcp_args[@]}"
                ctcp_cmd=$1
                shift
                case ${ctcp_cmd,,} in
                    version)
                        ctcp version "napoleon (https://git.monade.li/nai/napoleon)"
                        ;;
                esac
            elif [[ $message == "$prefix"* ]]; then
                message=${message#"$prefix"}
                xargs printf '%s\0' <<< "$message" 2> /dev/null | mapfile -d '' bot_args
                if (( ${PIPESTATUS[0]} != 0 )); then
                    say "Invalid arguments."
                    continue
                fi
                set -- "${bot_args[@]}"
                bot_cmd=$1
                shift
                case ${bot_cmd,,} in
                    help)
                        say "Available commands: help, about"
                        ;;
                    about)
                        say "An IRC bot written in Bash 4 (https://git.monade.li/nai/napoleon)"
                        ;;
                    *)
                        say "Unknown command: $bot_cmd"
                        ;;
                esac
            elif [[ ${message,,} == ?(*[![:alnum:]])"${nick,,}"?([![:alnum:]]*) ]]; then
                reply "${quotes[RANDOM%${#quotes[@]}]}"
            fi
            ;;
    esac
done
